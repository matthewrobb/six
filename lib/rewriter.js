var generate=require("escodegen").generate;require("./es6");var Tree=require("./esom/tree").Tree;var filters=require("./filters").filters;function rewrite(src){var program=Tree.create(src);program.select(".VariableDeclarator > id.ObjectPattern").forEach(function(node){node.properties=function(){var ctx=node.parent.context();var props=[];ctx.id.properties.node.children.forEach(function(child){var prop=child.context();var key=prop.key.compile();var value=prop.value.compile();props.push({key:key,value:value});});return props;};node.assemble=function(init){var ctx=node.parent.context();var props=node.properties();var result="";if(!ctx.init||!ctx.init.matches(".Identifier")&&props.length>1){var first=props.shift();result+=function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":[""," = ",", "],"raw":[""," = ",", "]},first.key,init);props.push(first);init=first.key;}props=props.map(function(prop,index){return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":[""," = ",".",""],"raw":[""," = ",".",""]},prop.key,init,prop.value);});return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["","",""],"raw":["","",""]},result,props.join(", "));};node.parent.compile=function(){return node.assemble(node.parent.context().init.compile());};});program.select(".ObjectExpression > properties > .Property[shorthand=true]").forEach(function(node){node.compile=function(){var key=node.context().key.compile();return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["",":",""],"raw":["",":",""]},key,key);};});program.select(".BinaryExpression[operator^='is']").forEach(function(node){return node.compile=function(){return filters.egal(node);};});program.select(".QuasiLiteral").forEach(function(node){return node.compile=function(){return filters.quasi(node.context());};});function ClassRewrite(node){var ctx=node.context();var constructor;var methods=[];if(ctx.body&&ctx.body.body&&ctx.body.body.node){ctx.body.body.node.children.forEach(function(child){var sub=child.context();if(sub.key.node.matches(".Identifier[name='constructor']"))constructor=sub;else methods.push(sub);});}Object.define(ctx,{get constructor(){return constructor;},get methods(){return methods;}});return filters.class(ctx);}program.select(".ClassDeclaration").forEach(function(node){return node.compile=function(){return ClassRewrite(node);};});program.select(".ClassExpression").forEach(function(node){return node.compile=function(){return ClassRewrite(node);};});program.select(".CallExpression > .MemberExpression > .Identifier[name='super']").forEach(function(node){var Call=node.closest(".CallExpression").context();var callee=Call.callee;var args=Call.arguments;if(args&&args.compile){var argsc=args=args.compile();}node.compile=function(){return"this.constructor.__super__";};callee.property.node.compile=function(){return callee.property.name+".call";};if(args&&args.node)args.node.compile=function(){return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["this",""],"raw":["this",""]},args.node?","+argsc:"");};});program.select(".CallExpression > callee[name='super']").forEach(function(node){var Call=node.parent.context();var args=Call.arguments;if(args&&args.compile){args=args.compile();}Call.node.compile=function(){return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["this.constructor.__super__.constructor.call(this ",")"],"raw":["this.constructor.__super__.constructor.call(this ",")"]},args.node?","+args:"");};});program.select(".ForOfStatement").forEach(function(node){node.compile=function(){var context=node.context();var right=context.right.compile();var body=context.body.compile().replace(/^{([\s\S]*)}$/,"$1");var dec=context.left.matches(".VariableDeclaration[kind='var']");var decs=[];var left=dec?context.left.declarations.node.first().context():context.left.node.context();if(left.type==="Identifier"||left.id&&left.id.type==="Identifier"){decs.push(left.compile());left=function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":[""," = _iterator.next()"],"raw":[""," = _iterator.next()"]},left.compile());}else if(left.type==="VariableDeclarator"&&left.id.type==="ObjectPattern"){left.select(".ObjectPattern").forEach(function(node){decs=decs.concat(node.properties().map(function(prop){return prop.key;}));left=node.assemble("_iterator.next()");});}else{left=function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["(",")"],"raw":["(",")"]},left.compile());}return function(__quasi__){var rawStrs=__quasi__["cooked"];var out=[];for(var i=0,k=-1,n=rawStrs.length;i<n;){out[++k]=rawStrs[i];out[++k]=arguments[++i];}return out.join("");}({"cooked":["        ","        void function(_iterator){          try {            while (true) {              ","              ","            }          } catch (e) { if (e !== StopIteration ) throw e }        }.call(this, ",".iterator());      "],"raw":["\r\n        ","\r\n        void function(_iterator){\r\n          try {\r\n            while (true) {\r\n              ","\r\n              ","\r\n            }\r\n          } catch (e) { if (e !== StopIteration ) throw e }\r\n        }.call(this, ",".iterator());\r\n      "]},dec?"var "+decs.join(", ")+";":"",left,body,right);};});return generate(Tree.create(program.compile()).ast,{format:{indent:{style:"  ",base:0},quotes:"double",compact:true},comment:true});}Object.define(Tree.prototype,{compile:function(){var src=this.raw();this.children.reverse().forEach(function(child){var raw=child.raw();var start=src.indexOf(raw);var end=start+raw.length;src=src.substring(0,start)+child.compile()+src.substring(end);});return src;},context:function(){var ctx=new Context(this);return ctx;}});var Context=function(){function Context(node){var stack=Object.create(node);Object.define(stack,node.ast);Object.define(stack,{node:node,get parent(){if(node.parent)return node.parent.context();}});if(stack.hasOwnProperty("loc"))delete stack["loc"];node.children.forEach(function(child){var ctx=child.context();Object.defineProperty(stack,child.key,{get:function(){return ctx;},enumerable:true});});return stack;}return Context;}();exports.rewrite=rewrite;
var hooks = {
  ".FunctionDeclaration": node => {
    var ctx  = node.context()
    if (! ctx.params.node)
      return
    var params = ctx.params.node.children

    var lastIdx   = params.length - 1
    var lastParam = params[lastIdx]

    if (lastParam.ast.type === 'RestParameter') {
      var restParamName = lastParam.ast.value.name
      params.pop()

      ctx.params.node.compile = () => params.map(p => p.context().name).join(', ')

      ctx.body.body.unshift({
        raw() "",
        compile() `var ${restParamName} = [].slice.call(arguments, ${lastIdx});`
      })
    }
  }
}

Object.define(exports, hooks)

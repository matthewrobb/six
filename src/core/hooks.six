module esprima = "esprima-six";

import parse from esprima;

export var hooks = [];

hooks.push(tree => {

    var { egal: expression } = parse("(function ( x, y ) { return (x === y)?( x !== 0 || 1/x === 1/y ) : ( x !== x && y !==y )})()").body[0];

    var egaller = function(left, right) {
        return {
            type: egal.type,
            arguments: [left, right],
            callee: egal.callee
        }
    }

    tree.traverse(node => {
        if( node.type === "BinaryExpression" && /^is/.test(node.operator) ) {
            node.overload(egaller(node.left.toAST(), node.right.toAST()));
        }
    });

});